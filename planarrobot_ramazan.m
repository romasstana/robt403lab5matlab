clear L
radian_deg = pi/180;

L(1) = Revolute('d', 1, 'a', 0, 'alpha', pi/2, ...
    'I', [0, 0, 0], ...
    'r', [0, 0, 0.5], ...
    'm', 0, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4, ...
    'qlim', [-180 180]*radian_deg );

L(2) = Revolute('d', 0, 'a', 1, 'alpha', 0, ...
    'I', [0.0125, 0.83958, 0.83958], ...
    'r', [0.5, 0, 0], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4, ...
    'qlim', [-90 90]*radian_deg );

L(3) = Revolute('d', 0, 'a', 1, 'alpha', 0,  ...
    'I', [0.0125, 0.83958, 0.83958], ...
    'r', [1.5, 0, 0], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', 10e-4, ...
    'qlim', [-90 90]*radian_deg );

planarrobot_ramazan = SerialLink(L, 'name', 'ramazan');

home_position = [0 pi/2 0];
hold_position = [0 0 0]; 
clear L

figure(1)
planarrobot_ramazan.plot(home_position)



jacob1 = planarrobot_ramazan.jacob0(home_position);
grav_1 = planarrobot_ramazan.gravload([0, 0, 1]);
torque_1 = jacob1.*grav_1

figure(2)
planarrobot_ramazan.plot(hold_position)



jacob2 = planarrobot_ramazan.jacob0(hold_position);
grav_2 = planarrobot_ramazan.gravload([0, 0, 1]);
torque_2 = jacob2.*grav_2


